MAX_RANDOMBRICKS	equ	$9f
BRICK_2ND_BYTE		equ	$ff
MAXBRICKROWS		equ	28	; TODO: Adjust later - lower the max brick count
MAXBRICKCOLS		equ	18
MAXBRICKS		equ	MAXBRICKCOLS*MAXBRICKROWS

BricksLeft:	dc.w	0

AddBrickQueue:
	REPT	MAXBRICKS
		dc.w	0		; Brick code byte - word is used to simplify coding
		dc.w	0		; Position in GAMEAREA - i.e. number of bytes from the start of GAMEAREA table
	ENDR
AddBrickQueuePtr:
		dc.l	AddBrickQueue	; NOTE: When bricks in queue -> points to adress +1

DirtyRowQueue:
	REPT	MAXBRICKS
		dc.w	0		; Row number
		dc.l	0		; Start address of dirty GAMEAREA row
	ENDR
		even

DirtyRowQueuePtr:
		dc.l	DirtyRowQueue	; NOTE: When item(s) in queue -> points to adress +1


RandomColor:	dc.l	0
RandomBrickStructs:
	REPT	MAX_RANDOMBRICKS
		dc.l	-1
		dc.w	-1
		dc.w	-1
		dc.w	2		; hBrickByteWidth
		dc.w	1		; hBrickPoints
		dc.l	0		; hBrickColorY0X0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
		dc.l	0
	ENDR


TileMap:
	dc.l	0		; 0
	dc.l	GrayCol
	dc.l	GreenScore
	dc.l	RedScore
	dc.l	WhiteScore
	dc.l	BlueScore
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0		; 10
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0		; 20
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0		; 30
	dc.l	0
StaticBrickMap:
	dc.l	WhiteBrick	; $20
	dc.l	WhiteBrickD
	dc.l	WhiteBrickDD
	dc.l	OrangeBrick
	dc.l	CyanBrick
	dc.l	GreenBrick
	dc.l	DarkGreyRaisedBrick
	dc.l	LightGreyRaisedBrick
	dc.l	BrightRedRaisedBrick
	dc.l	BrightRedTopBrick
	dc.l	RedBrick
	dc.l	BlueBrick
	dc.l	PurpleBrick
	dc.l	YellowBrick
	dc.l	LightBlueRaisedBrick
	dc.l	RedRaisedBrick
	dc.l	DarkBlueRaisedBrick	; $30
	dc.l	BlueTopBrick
	dc.l	B1
	dc.l	B2
	dc.l	B3
	dc.l	B4
	dc.l	B5
	dc.l	B6
	dc.l	B7
	dc.l	B8
	dc.l	B9
	dc.l	B10
	dc.l	B11
	dc.l	B12
	dc.l	B13
	dc.l	B14
	dc.l	0			; $40
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0
	dc.l	0

; This holds pointers to generated bricks.
; These essentially continues from $50 up to $fe in the TileMap.
RandomBricks:
	REPT	MAX_RANDOMBRICKS
		dc.l	0		; Address to a brickstructure
	ENDR
NextRandomBrickCode:
	dc.b	$50
	even


; ===== Single tiles 8x8 pixels =====
GrayCol:
	dc.l	-1		; hAddress to bob in CHIP mem - not used
	dc.w	-1		; hBrickModulo - not used
	dc.w	-1		; hBrickBlitSize - not used
	dc.w	1		; hBrickByteWidth
	dc.w	0		; hBrickPoints
	dc.l	$01800555	; hBrickColorY0X0
	dc.l	-1		
	dc.l	$01800555	
	dc.l	-1		
	dc.l	$01800555	
	dc.l	-1		
	dc.l	$01800555	
	dc.l	-1		
	dc.l	$01800555	
	dc.l	-1		
	dc.l	$01800555	
	dc.l	-1		
	dc.l	$01800555	
	dc.l	-1		
	dc.l	$01800555	
	dc.l	-1		

GreenScore:
	dc.l	-1		; hAddress to bob in CHIP mem - not used
	dc.w	-1		; hBrickModulo - not used
	dc.w	-1		; hBrickBlitSize - not used
	dc.w	1		; hBrickByteWidth
	dc.w	0		; hBrickPoints
	dc.l	$01800161	; hBrickColorY0X0
	dc.l	-1
	dc.l	$01800161
	dc.l	-1
	dc.l	$01800161
	dc.l	-1
	dc.l	$01800161
	dc.l	-1
	dc.l	$01800161
	dc.l	-1
	dc.l	$01800161
	dc.l	-1
	dc.l	$01800161
	dc.l	-1
	dc.l	$01800030
	dc.l	-1

RedScore:
	dc.l	-1		; hAddress to bob in CHIP mem - not used
	dc.w	-1		; hBrickModulo - not used
	dc.w	-1		; hBrickBlitSize - not used
	dc.w	1		; hBrickByteWidth
	dc.w	0		; hBrickPoints
	dc.l	$01800611	; hBrickColorY0X0
	dc.l	-1
	dc.l	$01800611
	dc.l	-1
	dc.l	$01800611
	dc.l	-1
	dc.l	$01800611
	dc.l	-1
	dc.l	$01800611
	dc.l	-1
	dc.l	$01800611
	dc.l	-1
	dc.l	$01800611
	dc.l	-1
	dc.l	$01800300
	dc.l	-1

WhiteScore:
	dc.l	-1		; hAddress to bob in CHIP mem - not used
	dc.w	-1		; hBrickModulo - not used
	dc.w	-1		; hBrickBlitSize - not used
	dc.w	1		; hBrickByteWidth
	dc.w	0		; hBrickPoints
	dc.l	$01800777	; hBrickColorY0X0
	dc.l	-1
	dc.l	$01800777
	dc.l	-1
	dc.l	$01800777
	dc.l	-1
	dc.l	$01800777
	dc.l	-1
	dc.l	$01800777
	dc.l	-1
	dc.l	$01800777
	dc.l	-1
	dc.l	$01800777
	dc.l	-1
	dc.l	$01800444
	dc.l	-1

BlueScore:
	dc.l	-1		; hAddress to bob in CHIP mem - not used
	dc.w	-1		; hBrickModulo - not used
	dc.w	-1		; hBrickBlitSize - not used
	dc.w	1		; hBrickByteWidth
	dc.w	0		; hBrickPoints
	dc.l	$01800227	; hBrickColorY0X0
	dc.l	-1
	dc.l	$01800227
	dc.l	-1
	dc.l	$01800227
	dc.l	-1
	dc.l	$01800227
	dc.l	-1
	dc.l	$01800227
	dc.l	-1
	dc.l	$01800227
	dc.l	-1
	dc.l	$01800227
	dc.l	-1
	dc.l	$01800114
	dc.l	-1

; ===== Bricks 16x8 pixels =====
WhiteBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800fff	; hBrickColorY0X0
	dc.l	$01800ddf
	dc.l	$01800fff
	dc.l	$01800ddf
	dc.l	$01800fff
	dc.l	$01800ddf
	dc.l	$01800fff
	dc.l	$01800ddf
	dc.l	$01800eee
	dc.l	$01800cce
	dc.l	$01800eee
	dc.l	$01800cce
	dc.l	$01800eee
	dc.l	$01800cce
	dc.l	$01800217
	dc.l	$01800217

WhiteBrickD:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800bbb	; hBrickColorY0X0
	dc.l	$0180099b
	dc.l	$01800bbb
	dc.l	$0180099b
	dc.l	$01800bbb
	dc.l	$0180099b
	dc.l	$01800bbb
	dc.l	$0180099b
	dc.l	$01800aaa
	dc.l	$0180088a
	dc.l	$01800aaa
	dc.l	$0180088a
	dc.l	$01800aaa
	dc.l	$0180088a
	dc.l	$01800217
	dc.l	$01800217

WhiteBrickDD:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800777	; hBrickColorY0X0
	dc.l	$01800557
	dc.l	$01800777
	dc.l	$01800557
	dc.l	$01800777
	dc.l	$01800557
	dc.l	$01800777
	dc.l	$01800557
	dc.l	$01800666
	dc.l	$01800556
	dc.l	$01800666
	dc.l	$01800556
	dc.l	$01800666
	dc.l	$01800556
	dc.l	$01800217
	dc.l	$01800217

OrangeBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800fa0	; hBrickColorY0X0
	dc.l	$01800d82
	dc.l	$01800fa0
	dc.l	$01800d82
	dc.l	$01800fa0
	dc.l	$01800d82
	dc.l	$01800fa0
	dc.l	$01800d82
	dc.l	$01800e90
	dc.l	$01800c72
	dc.l	$01800e90
	dc.l	$01800c72
	dc.l	$01800e90
	dc.l	$01800c72
	dc.l	$01800217
	dc.l	$01800217

CyanBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$018000ff	; hBrickColorY0X0
	dc.l	$018000df
	dc.l	$018000ff
	dc.l	$018000df
	dc.l	$018000ff
	dc.l	$018000df
	dc.l	$018000ff
	dc.l	$018000df
	dc.l	$018000ee
	dc.l	$018000cf
	dc.l	$018000ee
	dc.l	$018000cf
	dc.l	$018000ee
	dc.l	$018000cf
	dc.l	$01800217
	dc.l	$01800217

GreenBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$018000f0	; hBrickColorY0X0
	dc.l	$018000d2
	dc.l	$018000f0
	dc.l	$018000d2
	dc.l	$018000f0
	dc.l	$018000d2
	dc.l	$018000f0
	dc.l	$018000d2
	dc.l	$018000e0
	dc.l	$018000c2
	dc.l	$018000e0
	dc.l	$018000c2
	dc.l	$018000e0
	dc.l	$018000c2
	dc.l	$01800217
	dc.l	$01800217

DarkGreyRaisedBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800877	; hBrickColorY0X0
	dc.l	$01800877
	dc.l	$01800888
	dc.l	$01800888
	dc.l	$01800988
	dc.l	$01800988
	dc.l	$01800999
	dc.l	$01800999
	dc.l	$01800667
	dc.l	$01800667
	dc.l	$01800555
	dc.l	$01800555
	dc.l	$01800445
	dc.l	$01800445
	dc.l	$01800217
	dc.l	$01800217

LightGreyRaisedBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800bbb	; hBrickColorY0X0
	dc.l	$01800bbb
	dc.l	$01800cbb
	dc.l	$01800cbb
	dc.l	$01800ccc
	dc.l	$01800ccc
	dc.l	$01800ddd
	dc.l	$01800ddd
	dc.l	$01800bbc
	dc.l	$01800bbc
	dc.l	$01800aaa
	dc.l	$01800aaa
	dc.l	$0180099a
	dc.l	$0180099a
	dc.l	$01800217
	dc.l	$01800217

BrightRedRaisedBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800a00	; hBrickColorY0X0
	dc.l	$01800a00
	dc.l	$01800a00
	dc.l	$01800a00
	dc.l	$01800a00
	dc.l	$01800a00
	dc.l	$01800700
	dc.l	$01800700
	dc.l	$01800700
	dc.l	$01800700
	dc.l	$01800700
	dc.l	$01800700
	dc.l	$01800700
	dc.l	$01800700
	dc.l	$01800217
	dc.l	$01800217

BrightRedTopBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800e00	; hBrickColorY0X0
	dc.l	$01800e00
	dc.l	$01800e00
	dc.l	$01800e00
	dc.l	$01800e00
	dc.l	$01800e00
	dc.l	$01800e00
	dc.l	$01800900
	dc.l	$01800e00
	dc.l	$01800e00
	dc.l	$01800e00
	dc.l	$01800e00
	dc.l	$01800d00
	dc.l	$01800d00
	dc.l	$01800217
	dc.l	$01800217

RedBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800f00	; hBrickColorY0X0
	dc.l	$01800d02
	dc.l	$01800f00
	dc.l	$01800d02
	dc.l	$01800f00
	dc.l	$01800d02
	dc.l	$01800f00
	dc.l	$01800d02
	dc.l	$01800e00
	dc.l	$01800b03
	dc.l	$01800e00
	dc.l	$01800b03
	dc.l	$01800e00
	dc.l	$01800b03
	dc.l	$01800217
	dc.l	$01800217

BlueBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180005f	; hBrickColorY0X0
	dc.l	$0180004f
	dc.l	$0180005f
	dc.l	$0180004f
	dc.l	$0180005f
	dc.l	$0180004f
	dc.l	$0180005f
	dc.l	$0180004f
	dc.l	$0180004e
	dc.l	$0180003e
	dc.l	$0180004e
	dc.l	$0180003e
	dc.l	$0180004e
	dc.l	$0180003e
	dc.l	$01800217
	dc.l	$01800217

PurpleBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800f0f	; hBrickColorY0X0
	dc.l	$01800d0f
	dc.l	$01800f0f
	dc.l	$01800d0f
	dc.l	$01800f0f
	dc.l	$01800d0f
	dc.l	$01800f0f
	dc.l	$01800d0f
	dc.l	$01800e0f
	dc.l	$01800c0e
	dc.l	$01800e0f
	dc.l	$01800c0e
	dc.l	$01800e0f
	dc.l	$01800c0e
	dc.l	$01800217
	dc.l	$01800217

YellowBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800ff0	; hBrickColorY0X0
	dc.l	$01800dd2
	dc.l	$01800ff0
	dc.l	$01800dd2
	dc.l	$01800ff0
	dc.l	$01800dd2
	dc.l	$01800ff0
	dc.l	$01800dd2
	dc.l	$01800ee0
	dc.l	$01800cc3
	dc.l	$01800ee0
	dc.l	$01800cc3
	dc.l	$01800ee0
	dc.l	$01800cc3
	dc.l	$01800217
	dc.l	$01800217

LightBlueRaisedBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180066d	; hBrickColorY0X0
	dc.l	$0180066d
	dc.l	$0180066d
	dc.l	$0180066d
	dc.l	$0180066d
	dc.l	$0180066d
	dc.l	$0180033b
	dc.l	$0180033b
	dc.l	$0180033b
	dc.l	$0180033b
	dc.l	$0180033b
	dc.l	$0180033b
	dc.l	$0180033b
	dc.l	$0180033b
	dc.l	$01800217
	dc.l	$01800217

RedRaisedBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800611	; hBrickColorY0X0
	dc.l	$01800611
	dc.l	$01800711
	dc.l	$01800711
	dc.l	$01800811
	dc.l	$01800811
	dc.l	$01800911
	dc.l	$01800911
	dc.l	$01800711
	dc.l	$01800711
	dc.l	$01800601
	dc.l	$01800601
	dc.l	$01800511
	dc.l	$01800511
	dc.l	$01800217
	dc.l	$01800217

DarkBlueRaisedBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$01800118	; hBrickColorY0X0
	dc.l	$01800118
	dc.l	$01800118
	dc.l	$01800118
	dc.l	$01800118
	dc.l	$01800118
	dc.l	$01800117
	dc.l	$01800117
	dc.l	$01800117
	dc.l	$01800117
	dc.l	$01800117
	dc.l	$01800117
	dc.l	$01800117
	dc.l	$01800117
	dc.l	$01800017
	dc.l	$01800017

BlueTopBrick:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B1:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B2:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B3:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B4:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B5:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B6:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B7:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B8:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B9:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B10:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B11:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B12:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B13:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hBrickPoints
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217

B14:
	dc.l	0		; hAddress to bob in CHIP mem
	dc.w	ScrBpl-2	; hBrickModulo - [16px] 16 bits / 8 = 2 bytes to blit per line
	dc.w	(64*8*4)+1	; hBrickBlitSize - 8 lines, 1 words to blit horizontally
	dc.w	2		; hBrickByteWidth
	dc.w	1		; hTilePoint
	dc.l	$0180044f	; hBrickColorY0X0
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$0180044f
	dc.l	$01800217
	dc.l	$01800217